// Teaser One
script BeginTeaser_TeaserOne {
    gettime
    initclock(19, 00)
    setvar(VAR_RESULT, 1)
	warpsilent(MAP_BOREA_GLADE_TEASER, 6, 19)
    waitstate
	releaseall
}

// Teaser Two
script BeginTeaser_TeaserTwo {
    gettime
    setvar(VAR_RESULT, 2)
	warpsilent(MAP_SELENIC_SPIRIT_TEASER, 6, 6)
    waitstate
	releaseall
}

// Face Direction
movement FaceUp {
    face_up
}

movement FaceDown {
    face_down
}

movement FaceLeft {
    face_left
}

movement FaceRight {
    face_right
}

// Walk Direction
movement WalkUp {
    walk_up
}

movement WalkDown {
    walk_down
}

movement WalkLeft {
    walk_left
}

movement WalkRight {
    walk_right
}

movement Invisible {
    set_invisible
}

movement Visible {
    set_visible
}

// Jump in Place
movement JumpIPUp {
    jump_in_place_up
}

movement JumpIPDown {
    jump_in_place_down
}

movement JumpIPLeft {
    jump_in_place_left
}

movement JumpIPRight {
    jump_in_place_right
}

// Player Truck Facing Direction
script TruckFacingDirection {
    applymovement(OBJ_EVENT_ID_PLAYER, FaceRight)
}

// Return to last position
script PlayerReturnToLastPosition {
    specialvar(VAR_RESULT, GetPlayerFacingDirection)
    if (var(VAR_RESULT) == DIR_NORTH) {
        applymovement(OBJ_EVENT_ID_PLAYER, WalkDown)
	    waitmovement(0)
    } elif (var(VAR_RESULT) == DIR_EAST) {
        applymovement(OBJ_EVENT_ID_PLAYER, WalkLeft)
	    waitmovement(0)
    } elif (var(VAR_RESULT) == DIR_SOUTH) {
        applymovement(OBJ_EVENT_ID_PLAYER, WalkUp)
	    waitmovement(0)
    } elif (var(VAR_RESULT) == DIR_WEST) {
        applymovement(OBJ_EVENT_ID_PLAYER, WalkRight)
	    waitmovement(0)
    }
}

// Time Scripts
script DaySkip {
    callnative(RtcAdvanceTimeOneDay)
	dotimebasedevents
    call(EverGrandeCity_HallOfFame_EventScript_ResetDefeatedEventLegendaries)
}

script MorningSleep {
    gettime
    initclock(9, 00)
	if (var(VAR_0x8000) >= 9) {
		call(DaySkip)
	}
}

script AfternoonSleep {
    gettime
    initclock(13, 00)
	if (var(VAR_0x8000) >= 13) {
		call(DaySkip)
	}
}

script EveningSleep {
    gettime
    initclock(18, 00)
	if (var(VAR_0x8000) >= 18) {
		call(DaySkip)
	}
}

script NightSleep {
    gettime
    initclock(22, 00)
	if (var(VAR_0x8000) >= 22) {
		call(DaySkip)
	}
}

// Emotes
movement Exclaim {
    emote_exclamation_mark    
}

movement Question {
    emote_question_mark
}

movement Heart {
    emote_heart
}

movement Talk {
    //emote_talking
}

movement Think {
    //emote_thinking
}

// Demo Mode Begin Announcement
script DemoBegin {
    lock
    msgbox(format("You are playing a DEMO of\n POKéMON LABRADORESCENT LIGHTS.\l This only contains the tutorial."), MSGBOX_DEFAULT)
    closemessage
    release
    return
}

// Demo Mode End
script DemoEnd {
    lockall
    fadenewbgm(MUS_DP_POKEMON_LEAGUE_NIGHT)
    delay(30)
    closemessage
    delay(30)
    msgbox(format("You have now completed the DEMO of\n POKéMON LABRADORESCENT LIGHTS."), MSGBOX_DEFAULT)
    waitmessage
    delay(30)
    fadescreen(FADE_TO_WHITE)
    delay(60)
    closemessage
    applymovement(OBJ_EVENT_ID_PLAYER, WalkDown)
    waitmovement(0)
    msgbox(format("Thank you very much for playing!\n Press A to return to the title screen."), MSGBOX_DEFAULT)
    waitmessage
    closemessage
    fadeoutbgm(4)
    special(DoSoftReset)
}

//BadgeCount Macro
script CountBadges { // Returns Number of Badges to VAR_RESULT. (Nine if Champion)
    setvar(VAR_RESULT, 0)
    if (flag(FLAG_BADGE01_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE02_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE03_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE04_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE05_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE06_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE07_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_BADGE08_GET) == TRUE) {
        addvar(VAR_RESULT, 1)
    } 
    if (flag(FLAG_IS_CHAMPION) == TRUE) {
        addvar(VAR_RESULT, 1)
    }  
}

script PrintBadges {
    closemessage
    switch (var(VAR_RESULT)) { // Add Red and Blue Orb Check from Map Scripts when decided when player will obtain.
            case 0:
                msgbox(format("None"), MSGBOX_NPC)
            case 1:
                msgbox(format("One"), MSGBOX_NPC)
            case 2:
                msgbox(format("Two"), MSGBOX_NPC)
            case 3:
                msgbox(format("Three"), MSGBOX_NPC)
            case 4:
                msgbox(format("Four"), MSGBOX_NPC)
            case 5:
                msgbox(format("Five"), MSGBOX_NPC)
            case 6:
                msgbox(format("Six"), MSGBOX_NPC)
            case 7:
                msgbox(format("Seven"), MSGBOX_NPC)
            case 8:
                msgbox(format("Eight"), MSGBOX_NPC)
            case 9:
                msgbox(format("Champion"), MSGBOX_NPC)
            default:
                msgbox(format("Broken"), MSGBOX_NPC)
            }
    closemessage
    releaseall
    return
}

// PokedexScripts
script SetKantoCaught {
    setvar(VAR_TEMP_A, SPECIES_BULBASAUR)
    while (var(VAR_TEMP_A) <= SPECIES_MEW) {
            setcaughtmonvar(VAR_TEMP_A)
            addvar(VAR_TEMP_A, 1)
        }
    setcaughtmon(SPECIES_MUNCHLAX)
}

script SetAllCaught {
    setvar(VAR_TEMP_A, (SPECIES_NONE + 1))
    while (var(VAR_TEMP_A) <= NUM_SPECIES) {
            setcaughtmonvar(VAR_TEMP_A)
            addvar(VAR_TEMP_A, 1)
        }
}

script SetStartersSeen {
    setseenmon(SPECIES_SINISTEA)
    setseenmon(SPECIES_CHARCADET)
    setseenmon(SPECIES_BASULIN)
}

// Easy Mode
script LabLights_StartEasyMode {
    msgbox(format("Moving is a fresh start for all of us, but I don't want to be overbearing.\p I can still try and make your life a little bit easier if you'd like?"), MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        setflag(FLAG_SYS_GAMEMODE_EASY)
        msgbox(format("Alright my love,\n I'll be sure to help you out.\l Start by taking this."), MSGBOX_DEFAULT)
        giveitem(ITEM_TRAINING_KIT)
        msgbox(format("MOM: Your DAD gave this to me, in order\n to help fit POKéMON training around\l a busy schedule working on SELENIC.\p You may find it more useful now,\n and he also gave me something else."), MSGBOX_DEFAULT)
        giveitem(ITEM_UNLIMITED_REPEL)
        msgbox(format("MOM: When we were first adventuring,\n I was anxious of wild POKéMON.\p This long lasting REPEL made sure\n that I didn't run into any POKéMON.\l Well, only when I didn't want to!"), MSGBOX_DEFAULT)
        giveitem(ITEM_HOF_MEDAL)
        msgbox(format("MOM: Finally, he gave me this,\n his POKéMON HALL OF FAME MEDAL.\p If they got one look at this medal,\n TRAINERS would be too scared\l to challenge me.\p I could put it on whenever I didn't\n want to be disturbed.\p It also makes catching POKéMON a breeze!\p It's almost like the see the medal as\n a mark of respect.\l Anyway…"), MSGBOX_DEFAULT)
    } else {
        msgbox(format("Don't worry my love,\n I won't spoil your style.\l Anyway…"), MSGBOX_DEFAULT)
    }
}

script LabLights_ToggleEasyMode {
    questmenu(QUEST_MENU_CHECK_COMPLETE, ADVENTURE_BEGINS)
    if (var(VAR_RESULT) == TRUE) {

        if (flag(FLAG_SYS_GAMEMODE_EASY) == TRUE) {
            msgbox(format("MOM: You seem to be doing great honey!\n Would you still like to me to help out?"), MSGBOX_YESNO)
        } else {
            msgbox(format("MOM: You seem to be doing great honey!\n Would you like to me to help out?"), MSGBOX_YESNO)
        }
    
        if (var(VAR_RESULT) == YES) {
            msgbox(format("Of course, I'll always be here for you."), MSGBOX_DEFAULT)

            setflag(FLAG_SYS_GAMEMODE_EASY)
            clearflag(FLAG_SYS_NO_ENCOUNTER)
            clearflag(FLAG_SYS_NO_TRAINER_SEE)

            checkitem(ITEM_TRAINING_KIT)
            if (var(VAR_RESULT) == FALSE) {
                giveitem(ITEM_TRAINING_KIT)
            }

            checkitem(ITEM_UNLIMITED_REPEL)
            if (var(VAR_RESULT) == FALSE) {
                giveitem(ITEM_UNLIMITED_REPEL)
            }

            checkitem(ITEM_HOF_MEDAL)
            if (var(VAR_RESULT) == FALSE) {
                giveitem(ITEM_HOF_MEDAL)
            }

            closemessage

        } else {
            msgbox(format("Don't worry, {PLAYER}.\n I know you'll be amazing on your own."), MSGBOX_DEFAULT)

            clearflag(FLAG_SYS_GAMEMODE_EASY)
            clearflag(FLAG_SYS_NO_ENCOUNTER)
            clearflag(FLAG_SYS_NO_TRAINER_SEE)

            checkitem(ITEM_TRAINING_KIT)
            if (var(VAR_RESULT) == TRUE) {
                removeitem(ITEM_TRAINING_KIT)
            }

            checkitem(ITEM_UNLIMITED_REPEL)
            if (var(VAR_RESULT) == TRUE) {
                removeitem(ITEM_UNLIMITED_REPEL)
            }

            checkitem(ITEM_HOF_MEDAL)
            if (var(VAR_RESULT) == TRUE) {
                removeitem(ITEM_HOF_MEDAL)
            }

            msgbox(format("{PLAYER} returned DAD's\n TRAINING KIT to MOM."), MSGBOX_DEFAULT)
            closemessage
            delay(20)
            msgbox(format("{PLAYER} returned DAD's\n UNLIMITED REPEL to MOM."), MSGBOX_DEFAULT)
            closemessage
            delay(20)
            msgbox(format("{PLAYER} returned DAD's\n HALL OF FAME MEDAL to MOM."), MSGBOX_DEFAULT)
            closemessage

        }
    delay(20)
    }
}

// Calamity Queen
script LabLights_SkipCry_Triggers {
    if (flag(FLAG_SYS_DEMO_MODE) == TRUE) {
	    setvar(VAR_LAB_LIGHTS, 0)
    }
}

script LabLights_AbsolCry {
    playmoncry(SPECIES_ABSOL, 0)
	msgbox(format("Aurrra!"), MSGBOX_DEFAULT)
	waitmoncry
	closemessage
	setvar(VAR_LAB_LIGHTS, 0)
    delay(20)
    //applymovement(OBJ_EVENT_ID_PLAYER, Think)
    //waitmovement(0)

    if (flag(FLAG_SYS_DEMO_MODE) == FALSE) {

        questmenu(QUEST_MENU_CHECK_UNLOCKED, CALAMITY_QUEEN)
        if (var(VAR_RESULT) == FALSE) {
            msgbox(format("Oh?\n Was that a POKéMON cry?"), MSGBOX_SIGN)
            startquest(CALAMITY_QUEEN)
        } elif (flag(FLAG_SET_HOMELY_STATE) == TRUE) {
            msgbox(format("There's that scary POKéMON cry!\n It's louder than it's ever been.\l Maybe we should investigate it…"), MSGBOX_SIGN)
        } else {
            msgbox(format("There's that cry again,\n I wonder what POKéMON it was."), MSGBOX_SIGN)
        }

    } else {
        
        subquestmenu(QUEST_MENU_CHECK_COMPLETE, ADVENTURE_BEGINS, FIND_RIVAL)
        if (var(VAR_RESULT) == FALSE) {
            msgbox(format("Oh?\n Was that a POKéMON cry?"), MSGBOX_SIGN)
        } else {
            msgbox(format("There's that cry again,\n I wonder what POKéMON it was."), MSGBOX_SIGN)
        }

    }

}

script LabLights_LaprasCry {
    playmoncry(SPECIES_SNORLAX, 0)
	msgbox(format("Burrrurrrr!"), MSGBOX_DEFAULT)
	waitmoncry
	closemessage
	setvar(VAR_LAB_LIGHTS, 0)
    questmenu(QUEST_MENU_CHECK_UNLOCKED, TEAM_AQUA)
    delay(20)
    //applymovement(OBJ_EVENT_ID_PLAYER, Think)
    //waitmovement(0)
    if (var(VAR_RESULT) == FALSE) {
        msgbox(format("Whoa! That cry was definitely made by\n a different POKéMON.\p I wonder what it was."), MSGBOX_SIGN)
    }
}

// Borea Passage Blocking
script LabLights_EventScript_MineOwner {
	if (var(VAR_TEMP_1) == 0) {
            msgbox(format("On behalf of the DEVON CORPORATION,\n hold it right there!\p We're tunneling and our workers are mining LABRADORITE up ahead.\p I can't let anyone by.\n You're going to have to leave."), MSGBOX_NPC)
            addvar(VAR_TEMP_1, 1)
        } else {
            msgbox(format("Didn't you hear me?\p We're tunneling and our workers are mining LABRADORITE up ahead.\p I can't let anyone by, so\n you're going to have to leave."), MSGBOX_NPC)
        }
}

// Ignatius Complete Pokédex Quest
script LabLights_PokedexCompleted {
    questmenu(QUEST_MENU_CHECK_COMPLETE, POKEDEX)
    if (var(VAR_RESULT) == FALSE) {
        completequest(POKEDEX)
    }
}

// Slateport Aqua Grunt Subquest
script LabLights_Slateport_AquaSubquest {
    subquestmenu(QUEST_MENU_CHECK_COMPLETE, TEAM_AQUA, SLATEPORT_DRIVE_OUT)
    if (var(VAR_RESULT) == FALSE) {
        completesubquest(TEAM_AQUA, SLATEPORT_DRIVE_OUT)
    }
}

// Start Magma Quest
script BeginMagmaQuest {
    questmenu(QUEST_MENU_CHECK_UNLOCKED, TEAM_MAGMA)
    if (var(VAR_RESULT) == FALSE) {
        startquest(TEAM_MAGMA)
    }
}

script MagmaMeteorSubquest {
    subquestmenu(QUEST_MENU_CHECK_COMPLETE, TEAM_MAGMA, MAGMA_METEOR_FALLS)
    if (var(VAR_RESULT) == FALSE) {
        subquestmenu(QUEST_MENU_COMPLETE_QUEST, TEAM_MAGMA, MAGMA_METEOR_FALLS)
    }
}

// Gabby & Ty Quest
script StartGabbyTyQuest {
    questmenu(QUEST_MENU_CHECK_UNLOCKED, GABBY_TY)
    if (var(VAR_RESULT) == FALSE) {
        startquest(GABBY_TY)
    }
}

script GabbyFirstBattle {
    if (flag(FLAG_MET_OLDALE_GABBY_AND_TY) == FALSE) {
        trainerbattle_double(TRAINER_GABBY_AND_TY_1, GabbyAndTy_Text_GabbyPreFirstBattle, GabbyAndTy_Text_GabbyDefeatFirstTime, GabbyAndTy_Text_GabbyNotEnoughMons, GabbyAndTy_EventScript_FirstInterview)
    } else {
        trainerbattle_double(TRAINER_GABBY_AND_TY_1, GabbyAndTy_Text_GabbyPreFirstBattleMet, GabbyAndTy_Text_GabbyDefeatFirstTime, GabbyAndTy_Text_GabbyNotEnoughMons, GabbyAndTy_EventScript_FirstInterview)
    }
}

script TyFirstBattle {
    if (flag(FLAG_MET_OLDALE_GABBY_AND_TY) == FALSE) {
        trainerbattle_double(TRAINER_GABBY_AND_TY_1, GabbyAndTy_Text_TyPreFirstBattle, GabbyAndTy_Text_TyDefeatFirstTime, GabbyAndTy_Text_TyNotEnoughMons, GabbyAndTy_EventScript_FirstInterview)
    } else {
        trainerbattle_double(TRAINER_GABBY_AND_TY_1, GabbyAndTy_Text_TyPreFirstBattleMet, GabbyAndTy_Text_TyDefeatFirstTime, GabbyAndTy_Text_TyNotEnoughMons, GabbyAndTy_EventScript_FirstInterview)
    }
}

script GabbyTyBigInterviewCheck {
    questmenu(QUEST_MENU_CHECK_COMPLETE, GABBY_TY)
    if ((var(VAR_RESULT) == FALSE && flag(FLAG_TEMP_A) == TRUE)) {
        goto(GabbyAndTy_EventScript_RequestBigInterview)
    } else {
        return
    }
}

script FinishGabbyTyQuest {
    questmenu(QUEST_MENU_CHECK_COMPLETE, GABBY_TY)
    if ((var(VAR_RESULT) == FALSE && flag(FLAG_TEMP_A) == TRUE)) {
        completequest(GABBY_TY)
    }
}

// LAB. LIGHTS Item Scripts
script LabLights_ItemScript_OpenTheQuestMenu {
    openquestmenu
    releaseall
}

script LabLights_ItemScript_Repel {
    if (flag(FLAG_SYS_NO_ENCOUNTER) == FALSE) {
        msgbox(format("Would you like to apply\n DAD's UNLIMITED REPEL?"), MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            setflag(FLAG_SYS_NO_ENCOUNTER)
            setvar(VAR_REPEL_STEP_COUNT, 0)
            msgbox(format("The smell of the REPEL briefly fills\n the air before becoming muted."), MSGBOX_SIGN)
        } else {
            msgbox(format("You put DAD's UNLIMITED REPEL\n back in your bag."), MSGBOX_SIGN)
        }
    } else {
        msgbox(format("Would you like to remove\n DAD's UNLIMITED REPEL?"), MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            clearflag(FLAG_SYS_NO_ENCOUNTER)
            msgbox(format("With a quick splash of water,\n you remove DAD's UNLIMITED REPEL."), MSGBOX_SIGN)
        } else {
            msgbox(format("You leave DAD's UNLIMITED REPEL in use."), MSGBOX_SIGN)
        }
    }
    releaseall
}

script LabLights_ItemScript_HoFMedal {
    if (flag(FLAG_SYS_NO_TRAINER_SEE) == FALSE) {
        msgbox(format("Would you like to put on\n DAD's HALL OF FAME MEDAL?"), MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            setflag(FLAG_SYS_NO_TRAINER_SEE)
            msgbox(format("You pin DAD's HALL OF FAME MEDAL\n to your clothes."), MSGBOX_SIGN)
        } else {
            msgbox(format("You put DAD's HALL OF FAME MEDAL\n back in your bag."), MSGBOX_SIGN)
        }
    } else {
        msgbox(format("Would you like to remove\n DAD's HALL OF FAME MEDAL?"), MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            clearflag(FLAG_SYS_NO_TRAINER_SEE)
            msgbox(format("You put DAD's HALL OF FAME MEDAL\n back in your bag."), MSGBOX_SIGN)
        } else {
            msgbox(format("You leave DAD's HALL OF FAME MEDAL\n pinned to your clothes."), MSGBOX_SIGN)
        }
    }
    releaseall
}

script LabLights_ItemScript_InfernapePokeball {
    playmoncry(SPECIES_INFERNAPE, 0)
    msgbox(LabLights_DadsAdvice, MSGBOX_SIGN)
    releaseall
}

script LabLights_ItemScript_DianciePokeball {
    playmoncry(SPECIES_DIANCIE, 0)
    msgbox(LabLights_DadsAdvice, MSGBOX_SIGN)
    releaseall
}

script LabLights_ItemScript_EspurrPokeball {
    playmoncry(SPECIES_ESPURR, 0)
    msgbox(LabLights_DadsAdvice, MSGBOX_SIGN)
    releaseall
}

text LabLights_DadsAdvice {
    "MOM & DAD's advice echoed…\n"
    "“{PLAYER}, there's a time and place for\l"
    "everything!”"
}

script LabLights_ItemScript_LanetteLaptop {
    lock
    playse(SE_PC_LOGIN)
	call_if_unset(FLAG_SYS_PC_LANETTE, EventScript_AccessSomeonesPC)
	call_if_set(FLAG_SYS_PC_LANETTE, EventScript_AccessLanettesPC)
	msgbox(gText_StorageSystemOpened, MSGBOX_DEFAULT)
	special(ShowPokemonStorageSystemPC)
	waitstate
    playse(SE_PC_OFF)
    release
    end
}

script LabLights_PokemonDayCare_EventScript_NoStarters {
    if ((var(VAR_RESULT) >= SPECIES_SINISTEA && var(VAR_RESULT) <= SPECIES_INFERNAPE) || var(VAR_RESULT) == SPECIES_MUNCHLAX || var(VAR_RESULT) == SPECIES_SNORLAX) {
        msgbox(format("Oh wow! That's a very extraordinary POKéMON you have there. I don't know\l if we can raise something so rare."), MSGBOX_DEFAULT)
        releaseall
        end
    }
}